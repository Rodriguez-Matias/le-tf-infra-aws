---
- name: Provision Jenkins Vault Instance
  hosts:
# PLEASE MAINTAIN THE LINES COMMENTED WHEN COMMITING / PUSHING TO THE REPO
#    - localhost
    - ec2_jenkinsvault_bb_infra_deployer
  gather_facts: true
  become: yes

  vars:
    ansible_python_interpreter: "/usr/bin/python3"
  vars_files:
    - ./group_vars/all.yml

  roles:
  #=====================================#
  # HashiCorp Vault
  #=====================================#
  # Install vault
    - role: andrewrothstein.vault
      tags: vault

    # Set up vault config file and service
    - role: binbash_inc.vault-setup
      _vault_address_port: '{{ vault_config.tcp_address }}'
      tags: vault

    # Get vault status (next steps depend on this)
    - role: binbash_inc.vault-status
      _vault_address: '{{ vault_config.api_address }}'
      _vault_status_output_variable: vault_status
      tags: vault

    # Initialize vault
    - role: binbash_inc.vault-init
      when: vault_status.initialized == False
      _vault_address: '{{ vault_config.api_address }}'
      _vault_root_token_output_variable: vault_init_root_token
      _vault_unseal_keys_output_variable: vault_init_unseal_keys
      tags: vault

    # Add vault address variable to Jenkins .profile file
    - role: binbash_inc.file-write
      _file_name: .profile
      _file_path: /var/lib/jenkins
      _file_owner: jenkins
      _file_group: jenkins
      _file_contents: 'export VAULT_ADDR="{{ vault_config.api_address }}"'
      tags: vault

    # Store unseal keys on param store (root token can be generated with these)
    - role: binbash_inc.aws-param-store-write
      when: vault_status.initialized == False
      _param_store_entry_list:
      - name: /devops/vault/unseal_key_1
        type: SecureString
        value: '{{ vault_init_unseal_keys[0] }}'
      - name: /devops/vault/unseal_key_2
        type: SecureString
        value: '{{ vault_init_unseal_keys[1] }}'
      - name: /devops/vault/unseal_key_3
        type: SecureString
        value: '{{ vault_init_unseal_keys[2] }}'
      tags: vault

    # Unseal vault so that it is ready for usage
    - role: binbash_inc.vault-unseal
      when:
      - vault_status.initialized == false
      - vault_status.sealed == true
      _vault_address: '{{ vault_config.api_address }}'
      _vault_unseal_keys: '{{ vault_init_unseal_keys }}'
      tags: vault

    # Configure vault (once unsealed) to enable kv version 2
    - role: binbash_inc.vault-configure
      when:
      - vault_status.initialized == False
      _vault_address: '{{ vault_config.api_address }}'
      _vault_token: '{{ vault_init_root_token }}'
      _vault_config_enable_kv_v2: true
      _vault_config_enable_audit: false
      tags: vault

    # Set up vault policies
    - role: binbash_inc.vault-policies
      when: vault_status.initialized == false
      _vault_address: '{{ vault_config.api_address }}'
      _vault_token: '{{ vault_init_root_token }}'
      _policies_entry_list:
      - name: admin
        file: vault/admin.hcl
      - name: nwbe_operator
        file: vault/nwbe_operator.hcl
      - name: nwbi_operator
        file: vault/nwbi_operator.hcl
      tags:
      - vault
      - vault-policies

    - role: binbash_inc.vault-auth-github
      when: vault_status.initialized == false
      _vault_address: '{{ vault_config.api_address }}'
      _vault_token: '{{ vault_init_root_token }}'
      _github_organization: Life-House
      _github_teams_policies:
      - team: vault-admins
        policies:
        - admin
      - team: vault-nwbe-operators
        policies:
        - nwbe_operator
      - team: vault-nwbi-operators
        policies:
        - nwbi_operator
      tags:
      - vault
      - vault-auth
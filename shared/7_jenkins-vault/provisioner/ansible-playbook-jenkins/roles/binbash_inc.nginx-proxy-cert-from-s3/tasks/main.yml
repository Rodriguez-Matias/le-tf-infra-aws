---
- command: apt-get clean

- apt_repository:
    repo: "{{ nginx_ssl_certs_apt_repository_ansible_repo }}"

- name: GET certs from S3 and unzip them
  block:

  # Installing block pre-reqs 1
  - apt: pkg="{{ item }}" update_cache=yes cache_valid_time=86400 state=present
    loop: "{{ nginx_ssl_certs_apt_pkg_list }}"
    when: ansible_os_family == "Debian"

  # Installing block pre-reqs 2
  - pip:
      name: "{{item}}"
    loop: "{{ nginx_ssl_certs_pip_pkg_list }}"

  - aws_s3:
      bucket: "{{ nginx_ssl_certs_aws_s3_bucket_name }}"
      object: "{{ nginx_ssl_certs_aws_s3_bucket_key_prefix }}/{{ item }}.zip"
      dest: "/etc/ssl/private/{{ item }}.zip"
      mode: get
    with_items:
      - "{{nginx_ssl_certs_wildcard_domain}}"

  - shell: "unzip -o -P {{ nginx_ssl_certs_zip_pass }} /etc/ssl/private/{{ item }}.zip -d /etc/ssl/private/"
    with_items:
      - "{{nginx_ssl_certs_wildcard_domain}}"

  - shell: "cd /etc/ssl/private/{{ item }} && ls |grep -Eo '[2-999]{1,3}.pem$'|cut -d'.' -f1|sort|uniq|tail -1"
    register: command_output_1
    with_items:
      - "{{nginx_ssl_certs_wildcard_domain}}"

  - set_fact:
      ssl_cert_ver_1: "{{ command_output_1.results[0].stdout }}"
  - debug: msg="ssl_cert_ver_1 {{ ssl_cert_ver_1 }}"

  - shell: "cd /etc/ssl/private/{{ item.cert_path }} && rename -f 's/{{ item.ssl_cert_ver }}.pem/1.pem/g' *"
    with_items:
    - { cert_path: "{{nginx_ssl_certs_wildcard_domain}}", ssl_cert_ver: "{{ ssl_cert_ver_1 }}" }
    when: item.ssl_cert_ver|int >=2